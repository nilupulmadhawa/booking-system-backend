{"version":3,"file":"user.js","names":["getUsers","query","getAllUsers","getUserByID","id","getOneUser","_id","user","status","message","changePasswordService","oldPassword","newPassword","Promise","resolve","reject","bcrypt","compare","password","err","hash","isPasswordMatch","parseInt","process","env","BCRYPT_SALT_ROUNDS","encryptedPassword","findOneAndUpdateUser","email","updateUserdetails","userId","userDetails","is_admin","userData","toString","updatedUser","deleteById","findOneAndRemoveUser","deleted"],"sources":["../../src/services/user.js"],"sourcesContent":["import bcrypt from 'bcrypt'\r\nimport { findOneAndUpdateUser, findOneAndRemoveUser, getOneUser, getAllUsers } from '../repository/user'\r\n\r\n\r\nexport const getUsers = async (query) => {\r\n    try {\r\n        return await getAllUsers(query)\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getUserByID = async (id) => {\r\n    try {\r\n        const user = await getOneUser({ _id: id })\r\n        if (!user)\r\n            return {\r\n                status: 422,\r\n                message: 'User not found'\r\n            }\r\n        return user\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const changePasswordService = async (user, oldPassword, newPassword) => {\r\n    try {\r\n        user = await getOneUser({ _id: user._id }, true) // because req.user doesn't have the password\r\n\r\n        const isPasswordMatch = await new Promise((resolve, reject) => {\r\n            bcrypt.compare(oldPassword, user.password, (err, hash) => {\r\n                if (err) reject(err)\r\n                resolve(hash)\r\n            })\r\n        })\r\n        if (!isPasswordMatch) return { status: 400, message: 'Invalid current password' }\r\n\r\n        const encryptedPassword = await new Promise((resolve, reject) => {\r\n            bcrypt.hash(newPassword, parseInt(process.env.BCRYPT_SALT_ROUNDS), (err, hash) => {\r\n                if (err) reject(err)\r\n                resolve(hash)\r\n            })\r\n        })\r\n        return await findOneAndUpdateUser({ email: user.email }, { password: encryptedPassword })\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const updateUserdetails = async (userId, userDetails, is_admin) => {\r\n    try {\r\n        let userData\r\n        if (!is_admin) { delete userDetails.is_admin }\r\n        if (userDetails.password) { delete userDetails.password }\r\n        if (userDetails.email) {\r\n            userData = await getOneUser({ email: userDetails.email }, false)\r\n            if (userData && userData?._id.toString() !== userId.toString()) return { status: 422, message: 'Email is already taken' }\r\n        }\r\n\r\n        const updatedUser = await findOneAndUpdateUser({ _id: userId }, userDetails)\r\n        if (!updatedUser)\r\n            return {\r\n                status: 422,\r\n                message: 'User not found'\r\n            }\r\n        return updatedUser\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const deleteById = async (userId) => {\r\n    try {\r\n        const deleted = await findOneAndRemoveUser({ _id: userId })\r\n        if (!deleted)\r\n            return {\r\n                status: 422,\r\n                message: 'User not found'\r\n            }\r\n        return {\r\n            status: 200,\r\n            message: 'deleted successfully'\r\n        }\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"}